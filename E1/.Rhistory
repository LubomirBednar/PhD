summary(modIL12.s)
modIL6.s <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(M, M$Gene%in%"IL6"))
summary(modIL6.s)
modIFNG.s <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(M, M$Gene%in%"INFG"))
summary(modIFNG.s)
modSTAT6.s <- lmer(NE~inf.strain  +(1|dpi.diss), data=subset(M, M$Gene%in%"STAT6"))
summary(modSTAT6.s)
modTGFB.s <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(M, M$Gene%in%"TGFB"))
summary(modTGFB.s)
modTNFA.s <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(M, M$Gene%in%"TNFA"))
summary(modTNFA.s)
tab_model(modCXCL9.s, modIL10.s, modIL12.s, modIL6.s,
modIFNG.s, modSTAT6.s, modTGFB.s,
file="SPtable_VS_non_infected(itercept).html",
dv.labels=c("CXCL9", "IL10", "IL12", "IL6",
"IFNG", "STAT6", "TGFB"))
# ------------------------- Gene expression data (caecum)---------------------------
RTqPCRurl <- "https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/3_recordingTables/E1_012017_Eim_RT-qPCR_clean.csv"
RTqPCR.raw <- read.csv(text = getURL(RTqPCRurl), sep = ",", stringsAsFactors=FALSE)
#change colnames and misnamed rows to match standard
names(RTqPCR.raw)[names(RTqPCR.raw) == "Sample"] <- "EH_ID"
RTqPCR.raw[RTqPCR.raw=="IFN-y"] <- "IFN-g"
## just averages and add SD
RTqPCR <- data.frame(RTqPCR.raw %>% group_by(Target, EH_ID) %>%
summarize(SD = sd(Cq.Mean),
CqM = mean(Cq.Mean)))
RTqPCR <- as.data.frame(RTqPCR)
names(RTqPCR)[names(RTqPCR) == "Target"] <- "Gene"
names(RTqPCR)[names(RTqPCR) == "Sample"] <- "EH_ID"
RTqPCR[RTqPCR=="IFN-y"] <- "IFN-g"
# not sure why this is here
RTqPCR.raw <- RTqPCR
#convert columns to char + remove multiple classses
RTqPCRcharacters <- sapply(RTqPCR, is.factor)
RTqPCR[RTqPCRcharacters] <- lapply(RTqPCR[RTqPCRcharacters], as.character)
RTqPCR = as.data.frame(RTqPCR)
#continue Emanuel's analysis------------------------------
#standardize names
names(RTqPCR)[names(RTqPCR) == "Target"] <- "Gene"
names(RTqPCR)[names(RTqPCR) == "Cq.Mean"] <- "NE"
RTqPCR$Gene <- toupper(RTqPCR$Gene)
RTqPCR[RTqPCR=="PPIP"] <- "PPIB"
## wide dateset for merging in overall table
## ignore SD for a moment
CE.wide <- reshape(RTqPCR[, c("Gene", "EH_ID","CqM")],
timevar = "Gene", idvar = "EH_ID", direction = "wide")
refGenes <- c("CqM.CDC42", "CqM.PPIA", "CqM.PPIB")
targetGenes <- c("CqM.CXCL9", "CqM.IFN-G", "CqM.IL-10",
"CqM.IL-12", "CqM.IL-6",
"CqM.STAT6", "CqM.TGF-B")
## one general efficiency factor, as not measured for caecum
eff.factor <- 1.9
CE.eff <-  eff.factor^(CE.wide[, c(refGenes, targetGenes)] * -1)
normIDX <- apply(CE.eff[, refGenes], 1, prod)^
(1/length(refGenes))
CE.norm <- CE.eff[, targetGenes] / normIDX
names(CE.norm) <- gsub("CqM", "NE", names(CE.norm))
## fix some very odd outlier numbers
CE.norm[CE.norm > 1] <- NA
## dropping everything but IDs and normalized values... look into SDs,
## non-normalized etc... if needed!!
CE.norm <- cbind(EH_ID=CE.wide[, "EH_ID"], CE.norm)
## too lazy to write this more concisely...
CE.long <- reshape(CE.norm,
direction = "long",
idvar = "EH_ID", ids = EH_ID,
varying = list(grep("^NE\\.", colnames(CE.norm))),
times = grep("^NE\\.", colnames(CE.norm), value=TRUE))
## too confused to write this concisely
rownames(CE.long) <- NULL
CE.long$time <-  gsub("NE\\.", "", CE.long$time)
names(CE.long) <- c("EH_ID", "Gene", "NE")
CE.final <- merge(CE.long, stab, all.y=TRUE)
CE.final$dpi <- as.numeric(gsub("dpi|dip", "", CE.final$dpi.diss))
#-------------------add and process QA tables-----------------
# load in tables
melt.curvesurl <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/faulty_meting_curves.csv"
melt.curves <- read.csv(text = getURL(melt.curvesurl), sep = ",", stringsAsFactors=FALSE)
amp.curvesurl <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/faulty_amplification_curves.csv"
amp.curves <- read.csv(text = getURL(amp.curvesurl), sep = ",", stringsAsFactors=FALSE)
#identify rows in common, giving ultimately bad amplicons
common <- intersect(amp.curves$EH_ID, melt.curves$EH_ID)
melt.curves[common,] # give you common rows in data frame 1
amp.curves[common,] # give you common rows in data frame 2
melt.curves$EH_ID <- sub("^", "LM00", melt.curves$EH_ID )
amp.curves$EH_ID <- sub("^", "LM00", amp.curves$EH_ID )
remove <- amp.curves[common,]
CE.final <- CE.final[ !(CE.final$EH_ID %in% remove$EH_ID), ]
#same as other pdfs
pdf("figures/CytokinesCE.pdf", width=12, height=4)
#finish this ggplot
# ggplot(CE.final, aes(dpi, NE, color=inf.strain)) +
#------------------add and process design table---------------------------------------------------------
InfectionURL <- "https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/2_designTables/E1_012017_Eim_Experiment_Table_raw_NMRI.csv"
Infection.design <- read.csv(text = getURL(InfectionURL))
#rename columns and merge
names(Infection.design)[names(Infection.design) == "mouseID"] <- "EH_ID"
CE <- merge(RTqPCR, Infection.design, all.x = TRUE)
CE[715:724,"InfectionStrain"] <- "Uninf"
#add dpi0 to LM00C (won't work as factor)
CE.characters <- sapply(CE, is.factor)
CE[CE.characters] <- lapply(CE[CE.characters], as.character)
CE = as.data.frame(CE)
CE[715:724,"dpi.diss"] <- "0dpi"
CE.wide <- merge(CE, Infection.design)
names(CE)[names(CE) == "InfectionStrain"] <- "inf.strain"
## wide dateset for merging in overall table (messy, fix)
CE.wide <- reshape(CE.wide, timevar = "Gene", idvar = "EH_ID", direction = "wide")
CE$dpi <- as.numeric(gsub("dpi|dip", "", CE$dpi.diss))
pdf("figures/Cytokines.pdf", width=12, height=4)
ggplot(subset(CE.final, nchar(CE.final$Gene)>2), aes(dpi, NE, color=inf.strain)) +
# >>>>>>> c12d35e90dd4b1a0a3de94debe9ba9ff45194cb8
geom_jitter(width=0.2) +
geom_smooth(se=FALSE) +
scale_x_continuous(breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dip", "9dpi", "11dpi")) +
facet_wrap(~Gene, scales="free_y", nrow=2)+
scale_colour_brewer("infection\nisolate", palette = "Dark2") +
scale_y_continuous("normalized mRNA expression")+
theme_bw()
dev.off()
#----------------------------------extract to same format as Emanuel's
## Contrasting against Eflab
modCXCL9.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"CXCL9"))
summary(modCXCL9.c)
modIL10.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IL-10"))
summary(modIL10)
modIL12.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IL-12"))
summary(modIL6.c)
modIL6.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IL-6"))
summary(modIL6.c)
modIFNG.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IFN-G"))
summary(modIFNG.c)
modSTAT6.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"STAT6"))
summary(modSTAT6.c)
modTGFB.c <- lme4::lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"TGF-B"))
summary(modTGFB.c)
tab_model(modCXCL9.c, modIL10.c, modIL12.c, modIL6.c,
modIFNG.c, modSTAT6.c, modTGFB.c,
file="CEtable_VS_Eflab(itercept).html",
dv.labels=c("CXCL9", "IL10", "IL12", "IL6",
"IFNG", "STAT6", "TGFB"))
## Now contrasting against negative control
# l3v3l setting introduces only NAs
CE.final$inf.strain = factor(CE.final$inf.strain, levels(CE.final$inf.strain)[c(4,1:3)])
modCXCL9.cu <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"CXCL9"))
summary(modCXCL9.cu)
modIL10.cu <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IL-10"))
summary(modIL10.cu)
modIL12.cu <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IL-12"))
summary(modIL12.cu)
modIL6.cu <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IL-6"))
summary(modIL6.cu)
modIFNG.cu <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"IFN-G"))
summary(modIFNG.cu)
modSTAT6.cu <- lmer(NE~inf.strain  +(1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"STAT6"))
summary(modSTAT6.cu)
modTGFB.cu <- lmer(NE~inf.strain + (1|dpi.diss), data=subset(CE.final, CE.final$Gene%in%"TGF-B"))
summary(modTGFB.cu)
tab_model(modCXCL9.cu, modIL10.cu, modIL12.cu, modIL6.cu,
modIFNG.cu, modSTAT6.cu, modTGFB.cu,
file="CEtable_VS_non_infected(itercept).html",
dv.labels=c("CXCL9", "IL10", "IL12", "IL6",
"IFNG", "STAT6", "TGFB"))
##
## modSRAND <- glmer(sMLS~PH.delta+inf.strain +
##                       (1+PH.delta|dpi) +
##                      (1+PH.delta|inf.strain:dpi),
##                  data=stab,
##                family=poisson)
## summary(modSRAND)
## sjt.glmer(modSRAND, file="table_glmm_PHvsMLS.html")
## sjp.glmer(modSRAND)
## modSFIX <- glm(sMLS~PH.delta+(inf.strain*dpi.diss),
##                data=stab,
##                family=poisson)
## summary(modSFIX)
## Infiltration scores at different dpi
tapply(all.data$Score1,
all.data$inf.strain:as.factor(all.data$dpi_count), print)
FlamMod <- lmer(Score1~inf.strain + (1|dpi.diss), data=all.data)
summary(FlamMod)
## difflsmeans(FlamMod, test.effs = "inf.strain")
FlamModmls <- lmer(Score1~sMLS*inf.strain + (1|dpi.diss), data=all.data)
summary(FlamModmls)
## which peak is first
diffthat <- by(all.data, all.data$EH_ID, function (x){
minW <- min(x[, "perc_of_dpi1"], na.rm=TRUE)
WminW <- which(x[, "perc_of_dpi1"] == minW)
dayminW <- mean(x[WminW, "dpi_count"])
maxO <- max(x[, "Total.oocysts.g"], na.rm=TRUE)
WmaxO <- which(x[, "Total.oocysts.g"] == maxO)
daymaxO <- mean(x[WmaxO, "dpi_count"])
cbind(OO=daymaxO, WL=dayminW)
})
diffthis <- do.call(rbind, diffthat)
rownames(diffthis) <- unique(all.data$EH_ID)
diffthis <- diffthis[rowSums(is.na(diffthis))==0, ]
diffthis <- merge(stab, diffthis, by.x="EH_ID", by.y=0)
diffthis$EH_ID <- as.factor(as.character(diffthis$EH_ID))
library(reshape)
difflong <- melt(diffthis)
pdf("figures/peaks.pdf", width=8, height=4)
ggplot(difflong, aes(y=EH_ID, x=value, color=variable)) +
geom_point(size=4, alpha=0.5) +
facet_wrap(~inf.strain) +
scale_x_continuous("days post infection", breaks=3:11) +
scale_color_manual(name="Measured peak in",
labels=c("oocyst shedding", "weight loss"),
values=c("red", "blue")) +
scale_y_discrete("mouse ID") +
theme_bw()
dev.off()
pdf("figures/Figure_2.pdf", width=6, height=6)
pd <- position_dodge(0.15)
ggplot(data=difflong, aes(x=value, y=variable, group=EH_ID)) +
geom_line(color="red", position=pd)+
geom_point(position=pd) +
facet_wrap(~inf.strain) +
scale_x_continuous("days post infection", breaks=3:11) +
scale_y_discrete(label=c("peak oocyst\nshedding", "peak weight\nloss"))+
coord_flip() +
theme_bw()
dev.off()
ggplot(subset(CE.final, nchar(CE.final$Gene)>2), aes(dpi, NE, color=inf.strain)) +
# >>>>>>> c12d35e90dd4b1a0a3de94debe9ba9ff45194cb8
geom_jitter(width=0.2) +
geom_smooth(se=FALSE) +
scale_x_continuous(breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dip", "9dpi", "11dpi")) +
facet_wrap(~Gene, scales="free_y", nrow=2)+
scale_colour_brewer("infection\nisolate", palette = "Dark2") +
scale_y_continuous("normalized mRNA expression")+
theme_bw()
ggplot(subset(CE.final, nchar(CE.final$Gene)>2), aes(dpi, NE, color=inf.strain)) +
# >>>>>>> c12d35e90dd4b1a0a3de94debe9ba9ff45194cb8
geom_jitter(width=0.2) +
geom_smooth(se=FALSE) +
scale_x_continuous(breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dip", "9dpi", "11dpi")) +
facet_wrap(~Gene, scales="free_y", nrow=2)+
scale_colour_brewer("infection\nisolate", palette = "Dark2") +
scale_y_continuous("normalized mRNA expression")+
theme_bw()
dev.off()
ggplot(subset(CE.final, nchar(CE.final$Gene)>2), aes(dpi, NE, color=inf.strain)) +
# >>>>>>> c12d35e90dd4b1a0a3de94debe9ba9ff45194cb8
geom_jitter(width=0.2) +
geom_smooth(se=FALSE) +
scale_x_continuous(breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dip", "9dpi", "11dpi")) +
facet_wrap(~Gene, scales="free_y", nrow=2)+
scale_colour_brewer("infection\nisolate", palette = "Dark2") +
scale_y_continuous("normalized mRNA expression")+
theme_bw()
ggplot(subset(M, nchar(M$Gene)>2), aes(dpi, NE, color=inf.strain)) +
geom_jitter(width=0.2) +
geom_smooth(se=FALSE) +
scale_x_continuous(breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dip", "9dpi", "11dpi")) +
facet_wrap(~Gene, scales="free_y", nrow=2)+
scale_colour_brewer("infection\nisolate", palette = "Dark2") +
scale_y_continuous("normalized mRNA expression")+
theme_bw()
# RT-qPCR_clean data processing for E1_012017, additional data from CEC
library(RCurl)
library(httr)
library(Rmisc)
library(ggplot2)
library(dplyr)
library(compare)
library(viridis)
library(RColorBrewer)
library(ggsci)
library(tidyverse)
library(reshape2)
RTqPCRurl <- "https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E1_012017_Eim_CEWE_RT-qPCR_clean.csv"
RTqPCR <- read.csv(text = getURL(RTqPCRurl), sep = ",")
names(RTqPCR)[names(RTqPCR) == "Sample"] <- "EH_ID"
RTqPCR[RTqPCR=="IFN-y"] <- "IFN-g"
RTqPCR <- data.frame(RTqPCR %>% group_by(Target, EH_ID) %>%
summarize(SD = sd(Cq.Mean),
Cq.Mean = mean(Cq.Mean)))
RTqPCRcharacters <- sapply(RTqPCR, is.factor)
RTqPCR[RTqPCRcharacters] <- lapply(RTqPCR[RTqPCRcharacters], as.character)
RTqPCR = as.data.frame(RTqPCR)
InfectionURL <- "https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experimental_design/E1_012017_Eim_DESIGN.csv"
Infection.design <- read.csv(text = getURL(InfectionURL))
names(Infection.design)[names(Infection.design) == "mouseID"] <- "EH_ID"
names(Infection.design)[names(Infection.design) == "inf.strain"] <- "InfectionStrain"
all.data <- merge(RTqPCR, Infection.design, by = "EH_ID", all = TRUE)
all.data$SD[is.na(all.data$SD)] <- 0
all.data[715:724,"InfectionStrain"] <- "Uninf"
all.data.characters <- sapply(all.data, is.factor)
all.data[all.data.characters] <- lapply(all.data[all.data.characters], as.character)
all.data = as.data.frame(all.data)
all.data[715:724,"dpi.diss"] <- "dpi0"
all.data <- na.omit(all.data)
all.data$dpi.diss <- as.numeric(gsub("dpi|dip", "", all.data$dpi.diss))
all.data <- all.data[ !(all.data$EH_ID %in% c("LM0021", "LM0033", "LM0035", "LM0052")), ]
all.data$dpi <- as.numeric(gsub("dpi|dip", "", all.data$dpi.diss))
ggplot(subset(all.data, nchar(all.data$Target)>2), aes(dpi.diss, Cq.Mean, color=InfectionStrain)) +
geom_jitter(width=0.2) +
geom_smooth(se=FALSE) +
scale_x_continuous(breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dip", "9dpi", "11dpi")) +
facet_wrap(~Target, scales="free_y", nrow=2)+
scale_colour_brewer("infection\nisolate", palette = "Dark2") +
scale_y_continuous("normalized mRNA expression")+
theme_bw()
RtissueURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Eimeria-NMRI_Relative%20quantification_clean.csv"
Rtissue <- read.csv(text = getURL(RtissueURL))
RtMeans <- Rtissue[seq(1, nrow(Rtissue), by=2), c("Sample", "Cq.Mean", "Cq.Mean.1")]
names(RtMeans) <- c("EH_ID", "Mouse_gDNA", "Eimeria_mDNA")
RtMeans$EH_ID <- toupper(RtMeans$EH_ID)
RtMeans <- RtMeans[!duplicated(RtMeans$EH_ID),]
RtMeans <- merge(RtMeans, Infection.design, all=TRUE)
RtMeans$dpi.diss <- gsub("dip$", "dpi", RtMeans$dpi.diss)
RtMeans$dpi_count<- as.numeric(gsub("dpi", "", RtMeans$dpi.diss))
oocystsURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Clean_oocyst_data.csv"
oocysts <- read.csv(text = getURL(oocystsURL))
weightURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Weight_Expe_Jan_2017.csv"
weight <- read.csv(text = getURL(weightURL))
Infection <- subset(all.data, InfectionStrain%in%"Eflab"|InfectionStrain%in%"Efwild"|InfectionStrain%in%"EI70"|
InfectionStrain%in%"EI64"|InfectionStrain%in%"Uninf")
Genes <- subset(all.data, Target%in%"CDC42"|Target%in%"CXCL9"|Target%in%"IFN-g"|Target%in%"IL-10"|Target%in%"IL-12"|
Target%in%"IL-6"|Target%in%"Ppia"|Target%in%"Ppib"|Target%in%"STAT6"|Target%in%"TGF-b")
Dpi <- subset(all.data,dpi.diss%in%"3dpi"|dpi.diss%in%"5dpi"|dpi.diss%in%"7dip"|dpi.diss%in%"9dpi"|dpi.diss%in%"11dpi")
View(Infection)
ggplot(Infection, aes(x = InfectionStrain, y = Cq.Mean, color =InfectionStrain)) +
geom_boxplot()
ggplot(Genes, aes(x = Target, y = Cq.Mean, color = Target)) +
geom_boxplot()
ggplot(Dpi, aes(x = dpi.diss, y = Cq.Mean, color = dpi.diss)) +
geom_boxplot()
View(Infection)
library(ggplot2)
library(lme4)
library(devtools)
library(strangejacke)
library(sjPlot)
library(plyr)
library(coin)
library(ggeffects)
library(gridExtra)
library(ggpubr)
library(httr)
library(RCurl)
library(Rmisc)
library(sjPlot)
library(devtools)
library(dplyr)
library(reshape)
## for control: general experimental setup -------------------
stabURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Experiment_Table_raw_NMRI_Jan2017.csv"
stab <- read.csv(text = getURL(stabURL))
stab <- subset(stab, !stab$inf.strain%in%"EI70", drop = TRUE)
stab$inf.strain <- as.factor(as.character(stab$inf.strain))
names(stab)[names(stab)%in%"mouseID"] <- "EH_ID"
### spleen weight
spleenURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Spleen_weight.csv"
spleen <- read.csv(text = getURL(spleenURL))
names(spleen)[names(spleen)%in%"mouseID"] <- "EH_ID"
spleen <- merge(spleen, stab)
spleen$dpi <- as.numeric(gsub("dpi|dip", "", spleen$dpi.diss))
qPCR.plot <- ggplot(spleen, aes(dpi, spleenWeight, color=inf.strain)) +
geom_point() +
geom_smooth(se=FALSE) +
scale_y_continuous("spleen weight")+
scale_x_continuous("days post infection (dpi)",
breaks=c(3, 5, 7, 9, 11),
labels=c("3dpi", "5dpi", "7dpi", "9dpi", "11dpi")) +
scale_colour_brewer("Infection\nisolate", palette = "Dark2")+
theme_bw()
## -> no signal in that little data
## weight --------------------------------------------------------
weightURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Weight_Expe_Jan_2017.csv"
weight <- read.csv(text = getURL(weightURL))
## weight was only obtained for mice dissected at or after 7dpi
## correcting the names
names(weight)[names(weight)%in%"Mouse.ID"] <- "EH_ID"
## EI70 infections were not followed up as likely double infections
weight <- weight[!weight$inf.strain%in%"EI70", ]
## remove non meaningful columns
weight <- weight[, !colnames(weight)%in%c("Mouse.number", "Date.of.Birth")]
#percentage of weight per day
p.weight <- apply(weight[, grepl("^Day.*g", colnames(weight))], 2,
function (x) {
(x/weight$Day.1_.g)*100
})
#change gram to percentage weight column labels
colnames(p.weight) <- gsub(".g", ".p", colnames(p.weight))
#combine gram and percentage tables
weight <- cbind(weight, p.weight[, 2:ncol(p.weight)])
#reshape to long data format
weight.long <- reshape(weight,
direction = "long",
idvar = "EH_ID", ids = EH_ID,
varying = list(grep(".p$", colnames(weight), value=TRUE)),
timevar="dpi_of_perc",
v.names = "perc_of_dpi1",
times = grep(".p$", colnames(weight), value=TRUE))
#make dpi numeric, keep just numbers
weight.long$dpi_of_perc <- as.numeric(gsub("Day\\.?(\\d+)_\\.p", "\\1",
weight.long$dpi_of_perc))
#remove all Day.g columns
weight.long <- weight.long[, !grepl("^Day.", names(weight.long)) ]
### oocysts ---------------------------------------------------------
oocystsURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Clean_oocyst_data.csv"
oocysts <- read.csv(text = getURL(oocystsURL))
#make total oocysts per g out of NB counts
oocysts$Total.oocysts.g <- ((oocysts$Count..8.Neubauer.squares. / 8)*
10000 * 2) / oocysts$used.in.flotation..g.
## correcting the names
names(oocysts)[names(oocysts)%in%c("Sample.ID", "dpi")] <- c("EH_ID", "dpi_count")
oocysts <- merge(oocysts, stab, all.y=TRUE)
all.data <- merge(oocysts[, c("EH_ID", "dpi_count", "Total.oocysts.g",
"dpi.diss", "inf.strain")],
weight.long,
by.x=c("EH_ID", "dpi_count", "dpi.diss", "inf.strain"),
by.y=c("EH_ID", "dpi_of_perc", "dpi.diss", "inf.strain"),
all=TRUE)
all.data$dpi.diss <- gsub("dip$", "dpi", all.data$dpi.diss)
## rename to the abreviations in the paper
levels(all.data$inf.strain) <- c("EfalL", "EfalW", "EferW", "Uninf", "EI70")
levels(stab$inf.strain) <- c("EfalL", "EfalW", "EferW", "Uninf")
RtissueURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Eimeria-NMRI_Relative%20quantification_clean.csv"
Rtissue <- read.csv(text = getURL(RtissueURL))
RtMeans <- Rtissue[seq(1, nrow(Rtissue), by=2),
c("Sample", "Cq.Mean", "Cq.Mean.1")]
names(RtMeans) <- c("EH_ID", "Mouse_gDNA", "Eimeria_mDNA")
RtMeans$EH_ID <- toupper(RtMeans$EH_ID)
RtMeans <- RtMeans[!duplicated(RtMeans$EH_ID),]
RtMeans <- merge(RtMeans, stab, all=TRUE)
RtMeans$dpi.diss <- gsub("dip$", "dpi", RtMeans$dpi.diss)
RtMeans$dpi_count<- as.numeric(gsub("dpi", "", RtMeans$dpi.diss))
all.data <- merge(RtMeans, all.data, all=TRUE)
all.data <- all.data[!is.na(all.data$dpi_count), ]
all.data$PH.delta <- all.data$Mouse_gDNA - all.data$Eimeria_mDNA
max.neg <- max(all.data[all.data$inf.strain%in%"Uninf", "PH.delta"],na.rm=TRUE)
min.neg <- min(all.data$PH.delta, na.rm=TRUE)
LLD <- mean(all.data[all.data$inf.strain%in%"Uninf", "PH.delta"], na.rm=TRUE)+
2*(sd(all.data[all.data$inf.strain%in%"Uninf", "PH.delta"], na.rm=TRUE))
no.log.lld <- 2^LLD
(no.log.lld*1/(1-no.log.lld))*100
maxPHd <- max(all.data$PH.delta, na.rm=TRUE)
no.log.max.PHd <- 2^maxPHd
(no.log.max.PHd*1/(1-no.log.max.PHd))*100
max(all.data[all.data$inf.strain%in%"EferW", "PH.delta"], na.rm=TRUE)
histURL <- "https://raw.githubusercontent.com/derele/Jan2017Exp/master/Histo.csv"
hist <- read.csv(text = getURL(histURL))
hist$mMLS <- rowMeans(hist[, grepl("^MLS", colnames(hist))])
hist$sMLS <- rowSums(hist[, grepl("^MLS", colnames(hist))])
names(hist)[names(hist)%in%"Sample.ID"] <- "EH_ID"
all.data <- merge(all.data, hist, all=TRUE)
modS <- glm(sMLS~PH.delta*inf.strain,
data=all.data[which(all.data$PH.delta>LLD),], family=poisson)
sjt.glm(modS, file="table_glm_PHvsMLS.html")
mlsPredqPCR <- ggpredict(modS, terms=c("PH.delta", "inf.strain"))
w.means <- ddply(all.data,
c("dpi_count", "inf.strain"),
summarize,
N    =  sum(!is.na(perc_of_dpi1)),
sd    =  sd(perc_of_dpi1, na.rm=TRUE),
mean = mean(perc_of_dpi1, na.rm=TRUE))
o.means <- ddply(all.data[!all.data$inf.strain%in%"Uninf", ],
c("dpi_count", "inf.strain"),
summarize,
N    =  sum(!is.na(Total.oocysts.g)),
sd    =  sd(Total.oocysts.g, na.rm=TRUE),
mean = mean(Total.oocysts.g, na.rm=TRUE))
fancy_scientific <- function(l) {
## turn in to character string in scientific notation
l <- format(l, scientific = TRUE)
## quote the part before the exponent to keep all the digits
l <- gsub("^(.*)e", "'\\1'e", l)
## turn the 'e+' into plotmath format
l <- gsub("e", "%*%10^", l)
## return this as an expression
parse(text=l)
}
fancy_add_space<- function(l) {
## turn in to character string in scientific notation
l <- as.character(l)
## add space
l <- paste0("AAA", l)
## return this as an expression
parse(text=l)
}
weight.plot <- ggplot(w.means, aes(dpi_count, mean, group=inf.strain,
color=inf.strain)) +
geom_line() +
geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd), width = 0.2,
position = "dodge") +
geom_text(aes(x=dpi_count,
y=50+as.numeric(w.means$inf.strain)*3.2, label=N))+
scale_y_continuous("weight retained as percent of 1 dpi",
labels=fancy_add_space)+
scale_x_continuous("", breaks=1:11,
labels=1:11, limits=c(2, 11.5))+
scale_colour_brewer("Infection\nisolate", palette = "Dark2")+
theme_bw()
weight.plot
View(all.data)
IDs <- all.data$EH_ID
IDs <- distinct(IDs)
IDs <- dplyr::distinct(IDs)
IDs
IDs <- as.data.frame(IDs)
IDs <- distinct(IDs)
IDs
write.csv(IDs, "/home/luke/Desktop/Enas_samples.csv")
